{"version":3,"sources":["components/Todos.jsx","components/AddForm.jsx","components/AppTodo.js","components/Navbar.jsx","components/Home.jsx","actions/postActions.jsx","components/About/Template.jsx","components/About/RandomUser.jsx","components/About.jsx","components/Post.jsx","App.js","serviceWorker.js","reducers/rootReducer.jsx","index.js"],"names":["Todos","_ref","todos","deleteTodo","todoList","length","map","todo","react_default","a","createElement","className","key","id","content","onClick","AddForm","state","handleChange","e","_this","setState","target","value","handleSubmit","preventDefault","props","addTodo","onSubmit","this","htmlFor","type","onChange","Component","AppTodo","filter","Math","random","concat","Object","toConsumableArray","components_Todos","components_AddForm","withRouter","react_router_dom","to","Home","changeColor","document","querySelectorAll","forEach","el","item","textContent","convertItem","Number","slice","style","api","addModal","querySelector","innerHTML","axios","get","then","res","addPost","data","error","handleClick","deletePost","_this2","posts","postList","post","icon","list","weather","city","src","alt","name","round","main","temp","connect","dispatch","Template","option","dataset","title","textTransform","picture","large","first","last","color","borderTop","onMouseEnter","data-value","data-title","dob","date","email","phone","login","password","getData","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","Axios","response","results","abrupt","sent","t0","console","log","stop","apply","arguments","Main","_useState","useState","_useState2","slicedToArray","setData","useEffect","About_Template","About","RandomUser","Post","customReturn","history","push","humidity","pressure","wind","speed","ownProps","match","params","post_id","find","App","components_Navbar","react_router","exact","path","component","Boolean","window","location","hostname","initState","rootReducer","undefined","action","newPosts","localStorage","setItem","JSON","stringify","parse","getItem","y","objectSpread","x","store","createStore","ReactDOM","render","es","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5a19a0a5.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Todos = ({todos, deleteTodo}) => {\r\n    const todoList = todos.length ? \r\n        todos.map(todo => {\r\n            return(\r\n                <div className=\"collection-item\" key={todo.id}>\r\n                    <span>{todo.content}</span>\r\n                    <button className=\"right\" onClick={() => {deleteTodo(todo.id)}}>Delete</button>\r\n                </div>\r\n            )\r\n        })  :   <p className=\"center\" >You have no todo's left</p>\r\n    \r\n\r\n    return(\r\n        <div className=\"todos collection\">\r\n            {todoList}\r\n        </div>\r\n    )\r\n}\r\nexport default Todos","import React, { Component } from \"react\";\r\n\r\nclass AddForm extends Component {\r\n    state= {\r\n        content: \"\",\r\n    }\r\n    handleChange = e => {\r\n        this.setState({\r\n            content: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.addTodo(this.state);\r\n        this.setState({\r\n            content: ''\r\n        })\r\n    }\r\n    render(){\r\n        return(\r\n            <div>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <label htmlFor=\"name\">Add new todo:</label>\r\n                    <input type=\"text\" onChange={this.handleChange} value={this.state.content}/>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport  default AddForm ","import React, {Component} from 'react';\nimport Todos from './Todos'\nimport AddForm from './AddForm'\n\nclass AppTodo extends Component {\n\n  state= {\n    todos:[\n      {\n        id:1,\n        content:'kupic mleko'\n      },\n      {\n        id:2,\n        content:'wykosić trawę'\n      }\n    ]\n  }\n  deleteTodo = id => {\n    const todos = this.state.todos.filter(todo => {\n      return todo.id !== id;\n    })\n    this.setState({\n      todos\n    })\n  }\n  addTodo = todo => {\n    todo.id = Math.random();\n    let todos = [...this.state.todos, todo];\n    this.setState({\n      todos\n    })\n  }\n\n  render(){\n    return (\n      <div className=\"todo-app container\">\n        <h4 className=\"center\">Todo's</h4>\n        <Todos todos={this.state.todos} deleteTodo={this.deleteTodo}/>\n        <AddForm addTodo={this.addTodo}/>\n      </div>\n    );\n  }\n}\n\nexport default AppTodo;\n","import React from 'react';\r\nimport '../App.css'\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\n\r\nconst Navbar = (props) => {\r\n\r\n    return(\r\n        <nav className=\"nav-wrapper red darken-4\">\r\n            <div className=\"container\">\r\n                <span className=\"brand-logo left\">Logo</span>\r\n                <ul className=\"right\">\r\n                    <li><NavLink to=\"/\">Weather App</NavLink></li>\r\n                    <li><NavLink to=\"/about\">RandomUser</NavLink></li>\r\n                    <li><NavLink to=\"/AppTodo\">AppTodo</NavLink></li>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\nexport default withRouter(Navbar)","import React, { Component } from \"react\";\r\nimport { Link } from 'react-router-dom';\r\nimport '../css/Home.css';\r\nimport { connect } from 'react-redux';\r\nimport { addPost, deletePost } from '../actions/postActions';\r\nimport axios from 'axios';\r\n\r\n\r\nclass Home extends Component {\r\n    componentDidMount(){\r\n        this.changeColor()\r\n    }\r\n    changeColor = () => {\r\n        document.querySelectorAll('.card-content p').forEach(el => {\r\n            let item = el.textContent;\r\n            let convertItem = Number(item.slice(0,(item.length -3)))\r\n            if(convertItem >= 25) el.style = \"color:red\"\r\n            else if(convertItem >= 18) el.style = \"color:orange\"\r\n            else el.style = \"color:blue\"\r\n       })\r\n    }\r\n    state = {\r\n        content:'',\r\n        api: 'a5fbabc049476ee882170752effe1fbc'\r\n    }\r\n    addModal = () => {\r\n        document.querySelector('form span').innerHTML=\"<div id='modal'>Nie ma takiego miasta</div>\"\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({content:e.target.value})\r\n    } \r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        document.querySelector('form span').innerHTML=\"\";\r\n        \r\n        axios.get(`https://api.openweathermap.org/data/2.5/forecast?q=${this.state.content}&units=metric&appid=${this.state.api}`)\r\n        .then ( res=> this.props.addPost(res.data) , error => this.addModal())\r\n        this.setState({content:''})\r\n        this.changeColor()\r\n    }\r\n    handleClick = (id) => {\r\n        this.props.deletePost(id);\r\n    }\r\n       render(){\r\n           const { posts } = this.props;\r\n          \r\n           const postList = posts.length ? (\r\n               posts.map(post => {\r\n                const icon = post.list[0].weather[0].icon\r\n                   return (\r\n                       <div className=\"post card home\" key={post.city.id}>\r\n                           <button className=\"btn red right\" onClick={() => {this.handleClick(post.city.id)}}>\r\n                                X\r\n                            </button>\r\n                            <Link to={`/${post.city.id}`}>\r\n                           <img src={`http://openweathermap.org/img/w/${icon}.png`} alt=\"post\"/>\r\n                           <div className=\"card-content flow-text flex\">\r\n                                <span className=\"card-title red-text center \">{post.city.name}</span>\r\n                                <p className=\"center\">{Math.round(post.list[0].main.temp)}°C </p> \r\n                            </div>\r\n                            </Link>\r\n                            \r\n                        </div>\r\n                   )\r\n               } )\r\n           ) : (\r\n               <div>\r\n                   No post yet\r\n                </div>\r\n           )\r\n        return(\r\n            <div className=\"container home\">\r\n                <h4 className=\"center\">Weather App</h4>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <label htmlFor=\"input\">Wpisz nazwę miasta</label>\r\n                    <span></span>\r\n                    <div className=\"flex\">\r\n                        <input type=\"text\" name=\"input\" value={this.state.content} onChange={this.handleChange}/>\r\n                        <button className=\"btn green\">Dodaj</button>\r\n                    </div>\r\n                </form>\r\n                {postList}\r\n            </div>\r\n        )\r\n       }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        posts: state.posts\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        addPost: id => { dispatch( addPost(id) ) },\r\n        deletePost: id => { dispatch( deletePost(id) ) }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home)","const deletePost = (id) => {\r\n    return {\r\n        type: 'DELETE_POST',\r\n        id\r\n    }\r\n}\r\nconst addPost = (content) => {\r\n    return {\r\n        type: 'ADD_POST',\r\n        content\r\n    }\r\n}\r\n\r\nexport {deletePost, addPost}","import React from \"react\";\r\nimport '../../css/Template.css';\r\n\r\nconst Template = data => {\r\n  const firstStyle = {\r\n    color: '#0cdb0c',\r\n    borderTop: '2px solid #0cdb0c',\r\n  }\r\n  const capitalize = {\r\n    textTransform: 'capitalize',\r\n  }\r\n  const option = e => {\r\n    document.querySelectorAll('i').forEach(e=> e.style=\"color:white;borderTop: none;\")\r\n    const value = e.target.dataset.value\r\n    const title = e.target.dataset.title\r\n    e.target.style='color:#0cdb0c; border-top: 2px solid #0cdb0c;'\r\n   \r\n    document.querySelector('#element').innerHTML = `<div><b>${title}</b><p>${value}</p></div>`\r\n    if(title ===\"My name is:\"){\r\n      document.querySelector('#element p').style.textTransform = 'capitalize';\r\n    }\r\n  }\r\n \r\nreturn(\r\n    <div className=\"template\">\r\n      <section className=\"image\">\r\n        <img src={data.data[0].picture.large} alt=\"userImg\"/>\r\n      </section>\r\n      <section id=\"element\">\r\n      <div><b>My name is:</b><p style={capitalize}>{data.data[0].name.first+\" \"+data.data[0].name.last}</p></div>\r\n      </section>\r\n      <section  className=\"description\">\r\n        <i className=\"fas fa-user-alt\" style={firstStyle} onMouseEnter={option} data-value={data.data[0].name.first+\" \"+data.data[0].name.last} data-title=\"My name is:\"></i>\r\n        <i className=\"fas fa-birthday-cake\"  onMouseEnter={option} data-value={data.data[0].dob.date.slice(0,10)} data-title=\"My birthday:\"></i>\r\n        <i className=\"fas fa-envelope-open-text\" onMouseEnter={option} data-value={data.data[0].email} data-title='Email:'></i>\r\n        <i className=\"fas fa-phone-volume\" onMouseEnter={option} data-value={data.data[0].phone} data-title='Telephone:'> </i>\r\n        <i className=\"fas fa-key\" onMouseEnter={option} data-value={data.data[0].login.password} data-title='Password:'></i>\r\n      </section> \r\n  </div>\r\n  )\r\n}\r\n  \r\n  \r\n\r\n\r\nexport default Template;","import React, { useEffect, useState } from 'react';\r\nimport Template from './Template'\r\n\r\nimport Axios from 'axios';\r\n\r\nconst getData = async() => {\r\n    try{\r\n        return await Axios.get('https://randomuser.me/api/')\r\n        .then(response => response.data)\r\n        .then( data => data.results)\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\n\r\nconst Main =  () => {\r\n   const [data, setData] = useState(null);\r\n\r\n   useEffect(()=>{\r\n    getData().then(setData)\r\n   },[])\r\n return data ? <Template data={data} /> : \"Loading...\";\r\n}\r\nexport default Main","import React from \"react\";\r\nimport RandomUser from './About/RandomUser'\r\n\r\nconst About = () => {\r\n   \r\n        return(\r\n            <div className=\"container\">\r\n                <h4 className=\"center\" >Random user App</h4>\r\n                <RandomUser />\r\n            </div>\r\n        )\r\n}\r\nexport default (About)","import React , { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Post extends Component {\r\n  \r\n    customReturn = () => {\r\n        this.props.history.push('/');\r\n    }\r\n\r\n    render(){\r\n        const icon = this.props.post.list[0].weather[0].icon\r\n         \r\n        const post = this.props.post ? (\r\n            <div className=\"post\">\r\n                <h4 className=\"center blue-text\">\r\n                    {this.props.post.city.name}\r\n                    <img className=\"weather-icon\" src={`http://openweathermap.org/img/w/${icon}.png`} alt=\"ikona\"/>\r\n                </h4>\r\n               <div className=\"center desc\">\r\n                    <p>Temp: {Math.round(this.props.post.list[0].main.temp)}°C</p>\r\n                    <p>humidity: {Math.round(this.props.post.list[0].main.humidity)} %</p>\r\n                    <p>pressure: {Math.round(this.props.post.list[0].main.pressure)} Hpa</p>\r\n                    <p>wind: {Math.round(this.props.post.list[0].wind.speed)} m/s</p>\r\n               </div>\r\n                <div className=\"center flex\">\r\n                    <button className=\"btn blue\" onClick={this.customReturn}>\r\n                        Return\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        ) : \r\n            <div className=\"canter\">Loading posts ...</div>\r\n       \r\n        return(\r\n            <div className=\"container\">\r\n                <h4>{post} </h4>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state, ownProps) => {\r\n   let id = Number(ownProps.match.params.post_id);\r\n   return{\r\n       post: state.posts.find(post => post.city.id === id )\r\n   }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps)(Post)","import React, { Component } from \"react\";\r\nimport AppTodo from './components/AppTodo';\r\nimport Navbar from './components/Navbar';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport Home from './components/Home'\r\nimport About from './components/About'\r\nimport Post from './components/Post'\r\n\r\nclass App extends Component {\r\n\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <BrowserRouter>\r\n                    <Navbar />\r\n                  <Switch>\r\n                  <Route exact path=\"/\" component={Home} />\r\n                    <Route path=\"/about\" component={About} /> \r\n                    <Route path=\"/AppTodo\" component={AppTodo} />\r\n                    <Route path=\"/:post_id\" component={Post} />\r\n                  </Switch>\r\n                </BrowserRouter>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","let initState = {\r\n    posts: [],\r\n}\r\n\r\nconst rootReducer = (state = initState, action) => {\r\n    \r\n   if ( action.type === 'DELETE_POST'){\r\n       let newPosts = state.posts.filter(post => {\r\n           \r\n           return post.city.id !== action.id\r\n       });\r\n       localStorage.setItem('state',  JSON.stringify(newPosts))\r\n       newPosts = JSON.parse(localStorage.getItem('state'))\r\n       return{\r\n           posts: newPosts\r\n       }\r\n   }\r\n   if ( action.type === 'ADD_POST'){\r\n\r\n    const y = [action.content.list[0], action.content.city]\r\n    console.log(y);\r\n    \r\n        let newPosts = [ \r\n            ...state.posts,\r\n            action.content\r\n        ]\r\n        localStorage.setItem('state',  JSON.stringify(newPosts))\r\n        \r\n        return {\r\n            ...state,\r\n            posts:  newPosts\r\n        }     \r\n    }\r\n    const x = JSON.parse(localStorage.getItem('state'))\r\n    return {\r\n        ...state,\r\n        posts: x\r\n    };\r\n}\r\n\r\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport rootReducer from './reducers/rootReducer'\n\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}