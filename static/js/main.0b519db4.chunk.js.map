{"version":3,"sources":["components/Todos.jsx","components/AddForm.jsx","components/AppTodo.js","components/Navbar.jsx","components/Home.jsx","actions/postActions.jsx","components/About/Template.jsx","components/About/RandomUser.jsx","components/About.jsx","components/Post.jsx","App.js","serviceWorker.js","reducers/rootReducer.jsx","index.js"],"names":["Todos","_ref","todos","deleteTodo","todoList","length","map","todo","react_default","a","createElement","className","key","id","content","onClick","AddForm","state","handleChange","e","_this","setState","target","value","handleSubmit","preventDefault","props","addTodo","onSubmit","this","htmlFor","type","onChange","Component","AppTodo","filter","Math","random","concat","Object","toConsumableArray","components_Todos","components_AddForm","withRouter","react_router_dom","to","Home","changeColor","document","querySelectorAll","forEach","el","item","textContent","convertItem","Number","slice","style","api","addModal","text","querySelector","innerHTML","setTimeout","axios","get","then","res","addPost","data","error","handleClick","deletePost","_this2","posts","postList","post","icon","list","weather","city","src","alt","name","round","main","temp","required","autoComplete","connect","dispatch","Template","option","dataset","title","textTransform","picture","large","first","last","color","borderTop","onMouseEnter","data-value","data-title","dob","date","email","phone","login","password","getData","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","Axios","response","results","abrupt","sent","t0","console","log","stop","apply","arguments","Main","_useState","useState","_useState2","slicedToArray","setData","useEffect","About_Template","About","RandomUser","Post","customReturn","history","push","country","humidity","pressure","wind","speed","ownProps","match","params","post_id","find","App","components_Navbar","react_router","exact","path","component","Boolean","window","location","hostname","initState","rootReducer","undefined","action","newPosts","localStorage","setItem","JSON","stringify","parse","getItem","includes","objectSpread","alert","x","store","createStore","ReactDOM","render","es","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0b519db4.chunk.js","sourcesContent":["import React from 'react';\n\nconst Todos = ({todos, deleteTodo}) => {\n    const todoList = todos.length ? \n        todos.map(todo => {\n            return(\n                <div className=\"collection-item\" key={todo.id}>\n                    <span>{todo.content}</span>\n                    <button className=\"right\" onClick={() => {deleteTodo(todo.id)}}>Delete</button>\n                </div>\n            )\n        })  :   <p className=\"center\" >You have no todo's left</p>\n    \n\n    return(\n        <div className=\"todos collection\">\n            {todoList}\n        </div>\n    )\n}\nexport default Todos","import React, { Component } from \"react\";\n\nclass AddForm extends Component {\n    state= {\n        content: \"\",\n    }\n    handleChange = e => {\n        this.setState({\n            content: e.target.value\n        })\n    }\n    handleSubmit = e => {\n        e.preventDefault();\n        this.props.addTodo(this.state);\n        this.setState({\n            content: ''\n        })\n    }\n    render(){\n        return(\n            <div>\n                <form onSubmit={this.handleSubmit}>\n                    <label htmlFor=\"name\">Add new todo:</label>\n                    <input type=\"text\" onChange={this.handleChange} value={this.state.content}/>\n                </form>\n            </div>\n        )\n    }\n}\nexport  default AddForm ","import React, {Component} from 'react';\nimport Todos from './Todos'\nimport AddForm from './AddForm'\n\nclass AppTodo extends Component {\n\n  state= {\n    todos:[\n      {\n        id:1,\n        content:'kupic mleko'\n      },\n      {\n        id:2,\n        content:'wykosić trawę'\n      }\n    ]\n  }\n  deleteTodo = id => {\n    const todos = this.state.todos.filter(todo => {\n      return todo.id !== id;\n    })\n    this.setState({\n      todos\n    })\n  }\n  addTodo = todo => {\n    todo.id = Math.random();\n    let todos = [...this.state.todos, todo];\n    this.setState({\n      todos\n    })\n  }\n\n  render(){\n    return (\n      <div className=\"todo-app container\">\n        <h4 className=\"center\">Todo's</h4>\n        <Todos todos={this.state.todos} deleteTodo={this.deleteTodo}/>\n        <AddForm addTodo={this.addTodo}/>\n      </div>\n    );\n  }\n}\n\nexport default AppTodo;\n","import React from 'react';\nimport '../App.css'\nimport { NavLink, withRouter } from 'react-router-dom';\n\nconst Navbar = (props) => {\n\n    return(\n        <nav className=\"nav-wrapper red darken-4\">\n            <div className=\"container\">\n                <span className=\"brand-logo left\">Logo</span>\n                <ul className=\"right\">\n                    <li><NavLink to=\"/\">Weather App</NavLink></li>\n                    <li><NavLink to=\"/about\">RandomUser</NavLink></li>\n                    <li><NavLink to=\"/AppTodo\">AppTodo</NavLink></li>\n                </ul>\n            </div>\n        </nav>\n    )\n}\nexport default withRouter(Navbar)","import React, { Component } from \"react\";\nimport { Link } from 'react-router-dom';\nimport '../css/Home.css';\nimport { connect } from 'react-redux';\nimport { addPost, deletePost } from '../actions/postActions';\nimport axios from 'axios';\n\n\nclass Home extends Component {\n    componentDidMount(){\n        this.changeColor()\n    }\n    changeColor = () => {\n        document.querySelectorAll('.card-content p').forEach(el => {\n            let item = el.textContent;\n            let convertItem = Number(item.slice(0,(item.length -3)))\n            if(convertItem >= 25) el.style = \"color:red\"\n            else if(convertItem >= 18) el.style = \"color:orange\"\n            else el.style = \"color:blue\"\n       })\n    }\n    state = {\n        content:'',\n        api: 'a5fbabc049476ee882170752effe1fbc'\n    }\n    addModal = (text) => {\n        document.querySelector('form span').innerHTML=`<div id='modal'>${text}</div>`;\n        setTimeout(()=>{ document.querySelector('form span').innerHTML=\"\"},2500)\n    }\n    handleChange = (e) => {\n        this.setState({content:e.target.value})\n    } \n    handleSubmit = (e) => {\n        e.preventDefault();\n        document.querySelector('form span').innerHTML=\"\";\n        \n        axios.get(`https://api.openweathermap.org/data/2.5/forecast?q=${this.state.content}&units=metric&appid=${this.state.api}`)\n        .then ( res=> this.props.addPost(res.data) , error => this.addModal('Nie ma takiego miasta'))\n        this.setState({content:''})\n        this.changeColor()\n    }\n    handleClick = (id) => {\n        this.props.deletePost(id);\n    }\n       render(){\n           const { posts } = this.props;\n            \n           const postList = posts ? (\n               posts.map(post => {\n                const icon = post.list[0].weather[0].icon\n                   return (\n                       <div className=\"post card home\" key={post.city.id}>\n                           <button className=\"btn red right\" onClick={() => {this.handleClick(post.city.id)}}>\n                                X\n                            </button>\n                            <Link to={`/${post.city.id}`}>\n                           <img src={`http://openweathermap.org/img/w/${icon}.png`} alt=\"post\"/>\n                           <div className=\"card-content flow-text flex\">\n                                <span className=\"card-title red-text center \">{post.city.name}</span>\n                                <p className=\"center\">{Math.round(post.list[0].main.temp)}°C </p> \n                            </div>\n                            </Link>\n                            \n                        </div>\n                   )\n               } )\n           ) : (\n               <div>\n                   No post yet\n                </div>\n           )\n        return(\n            <div className=\"container home\">\n                <h4 className=\"center\">Weather App</h4>\n                <form onSubmit={this.handleSubmit}>\n                    <label htmlFor=\"input\">Wpisz nazwę miasta</label>\n                    <span></span>\n                    <div className=\"flex\">\n                        <input type=\"text\" name=\"input\" value={this.state.content} onChange={this.handleChange} required autoComplete=\"off\"/>\n                        <button className=\"btn green\">Dodaj</button>\n                    </div>\n                </form>\n                {postList}\n            </div>\n        )\n       }\n}\nconst mapStateToProps = state => {\n    return {\n        posts: state.posts\n    }\n}\nconst mapDispatchToProps = (dispatch) => {\n    return{\n        addPost: id => { dispatch( addPost(id) ) },\n        deletePost: id => { dispatch( deletePost(id) ) },\n        \n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home)","const deletePost = (id) => {\n    return {\n        type: 'DELETE_POST',\n        id\n    }\n}\nconst addPost = (content) => {\n    return {\n        type: 'ADD_POST',\n        content\n    }\n}\n\nexport {deletePost, addPost}","import React from \"react\";\nimport '../../css/Template.css';\n\nconst Template = data => {\n  const firstStyle = {\n    color: '#0cdb0c',\n    borderTop: '2px solid #0cdb0c',\n  }\n  const capitalize = {\n    textTransform: 'capitalize',\n  }\n  const option = e => {\n    document.querySelectorAll('i').forEach(e=> e.style=\"color:white;borderTop: none;\")\n    const value = e.target.dataset.value\n    const title = e.target.dataset.title\n    e.target.style='color:#0cdb0c; border-top: 2px solid #0cdb0c;'\n   \n    document.querySelector('#element').innerHTML = `<div><b>${title}</b><p>${value}</p></div>`\n    if(title ===\"My name is:\"){\n      document.querySelector('#element p').style.textTransform = 'capitalize';\n    }\n  }\n \nreturn(\n    <div className=\"template\">\n      <section className=\"image\">\n        <img src={data.data[0].picture.large} alt=\"userImg\"/>\n      </section>\n      <section id=\"element\">\n      <div><b>My name is:</b><p style={capitalize}>{data.data[0].name.first+\" \"+data.data[0].name.last}</p></div>\n      </section>\n      <section  className=\"description\">\n        <i className=\"fas fa-user-alt\" style={firstStyle} onMouseEnter={option} data-value={data.data[0].name.first+\" \"+data.data[0].name.last} data-title=\"My name is:\"></i>\n        <i className=\"fas fa-birthday-cake\"  onMouseEnter={option} data-value={data.data[0].dob.date.slice(0,10)} data-title=\"My birthday:\"></i>\n        <i className=\"fas fa-envelope-open-text\" onMouseEnter={option} data-value={data.data[0].email} data-title='Email:'></i>\n        <i className=\"fas fa-phone-volume\" onMouseEnter={option} data-value={data.data[0].phone} data-title='Telephone:'> </i>\n        <i className=\"fas fa-key\" onMouseEnter={option} data-value={data.data[0].login.password} data-title='Password:'></i>\n      </section> \n  </div>\n  )\n}\n  \n  \n\n\nexport default Template;","import React, { useEffect, useState } from 'react';\nimport Template from './Template'\n\nimport Axios from 'axios';\n\nconst getData = async() => {\n    try{\n        return await Axios.get('https://randomuser.me/api/')\n        .then(response => response.data)\n        .then( data => data.results)\n    } catch (error) {\n        console.log(error)\n    }\n}\n\nconst Main =  () => {\n   const [data, setData] = useState(null);\n\n   useEffect(()=>{\n    getData().then(setData)\n   },[])\n return data ? <Template data={data} /> : \"Loading...\";\n}\nexport default Main","import React from \"react\";\nimport RandomUser from './About/RandomUser'\n\nconst About = () => {\n   \n        return(\n            <div className=\"container\">\n                <h4 className=\"center\" >Random user App</h4>\n                <RandomUser />\n            </div>\n        )\n}\nexport default (About)","import React , { Component } from 'react';\nimport { connect } from 'react-redux';\n\nclass Post extends Component {\n  \n    customReturn = () => {\n        this.props.history.push('/');\n    }\n\n    render(){\n        const icon = this.props.post.list[0].weather[0].icon\n         \n        const post = this.props.post ? (\n            <div className=\"post\">\n                <h4 className=\"center blue-text\">\n                    {this.props.post.city.name}\n                    <img className=\"weather-icon\" src={`http://openweathermap.org/img/w/${icon}.png`} alt=\"ikona\"/>\n                </h4>\n               <div className=\"center desc\">\n                    <p>City: {this.props.post.city.country}</p>\n                    <p>Temp: {Math.round(this.props.post.list[0].main.temp)}°C</p>\n                    <p>Humidity: {Math.round(this.props.post.list[0].main.humidity)} %</p>\n                    <p>Pressure: {Math.round(this.props.post.list[0].main.pressure)} Hpa</p>\n                    <p>Wind: {Math.round(this.props.post.list[0].wind.speed)} m/s</p>\n               </div>\n                <div className=\"center flex\">\n                    <button className=\"btn blue\" onClick={this.customReturn}>\n                        Return\n                    </button>\n                </div>\n            </div>\n        ) : \n            <div className=\"canter\">Loading posts ...</div>\n       \n        return(\n            <div className=\"container\">\n                <h4>{post} </h4>\n            </div>\n        )\n    }\n}\nconst mapStateToProps = (state, ownProps) => {\n   let id = Number(ownProps.match.params.post_id);\n   return{\n       post: state.posts.find(post => post.city.id === id )\n   }\n}\n\n\n\nexport default connect(mapStateToProps)(Post)","import React, { Component } from \"react\";\nimport AppTodo from './components/AppTodo';\nimport Navbar from './components/Navbar';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Home from './components/Home'\nimport About from './components/About'\nimport Post from './components/Post'\n\nclass App extends Component {\n\n\n    render(){\n        return(\n            <div>\n                <BrowserRouter>\n                    <Navbar />\n                  <Switch>\n                  <Route exact path=\"/\" component={Home} />\n                    <Route path=\"/about\" component={About} /> \n                    <Route path=\"/AppTodo\" component={AppTodo} />\n                    <Route path=\"/:post_id\" component={Post} />\n                  </Switch>\n                </BrowserRouter>\n                \n            </div>\n        )\n    }\n}\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","\nlet initState ={\n    posts:[]\n}\n\nconst rootReducer = (state = initState, action) => {\n    \n   if ( action.type === 'DELETE_POST'){\n       let newPosts = state.posts.filter(post => {\n           \n           return post.city.id !== action.id\n       });\n       localStorage.setItem('state',  JSON.stringify(newPosts))\n       newPosts = JSON.parse(localStorage.getItem('state'))\n       return{\n           posts: newPosts\n       }\n   }\n   if ( action.type === 'ADD_POST' && state.posts !== null ){\n     \n        let newPosts = [\n            ...state.posts,\n            action.content\n        ]\n       const x = state.posts.map(e=> e.city.name == action.content.city.name ? true : false )\n        if(x.includes(true)){\n            alert('Takie miasto jest już na liście')\n        }\n        else{\n            localStorage.setItem('state',  JSON.stringify(newPosts))\n        \n        return {\n            ...state,\n            posts:  newPosts\n        } \n        }\n            \n    } else if (action.type === 'ADD_POST'){\n        localStorage.setItem('state',  JSON.stringify([action.content]))\n        \n        return {\n            posts:  action.content\n        } \n    }\n    const x = JSON.parse(localStorage.getItem('state'))\n    return {\n        ...state,\n        posts: x\n    };\n}\n\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport rootReducer from './reducers/rootReducer'\n\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}